<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
    default-lazy-init="true">
    
    <description>Spring公共配置 </description>
    
    <bean class="com.freestyle.util.SpringContextHolder" lazy-init="false"/>
    
    
    <!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
    
    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.freestyle.service">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
    <!-- 事务管理器 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    
    <!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
    <!-- <task:annotation-driven /> -->
    
    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
    <!-- 国际化资源文件 -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/messages</value>
            </list>
        </property>
    </bean>
    
    <!-- 配置mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
    </bean>
    
    <!-- 自动扫描映射器 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.freestyle.mapper" />
    </bean>
    
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
       <property name="host" >  
        <value>${mail.host}</value>  
       </property>  
       <property name="port" >  
        <value type="java.lang.Integer">${mail.port}</value>  
       </property>  
       <property name="protocol">  
        <value>${mail.protocol}</value>  
       </property>  
       <property name="username">  
        <value>${mail.username}</value>  
       </property>  
       <property name="password">  
        <value>${mail.password}</value>  
       </property>  
       <!-- SMTP服务器验证 -->  
       <property name="javaMailProperties">  
           <props>  
               <!-- 验证身份 -->  
               <prop key="mail.debug">${mail.debug}</prop>
			   <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
               <prop key="mail.smtp.localhost">${mail.smtp.localhost}</prop>  
               <prop key="mail.smtps.auth">${mail.smtps.auth}</prop>  
               <prop key="mail.smtp.ssl.enable">${mail.smtp.ssl.enable}</prop>  
               <prop key="mail.transport.protocol">${mail.transport.protocol}</prop>  
          </props>  
       </property>
   </bean>  
     
   <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">  
    <property name="from">  
        <value>${mail.username}</value>
    </property>
   </bean>

    <!-- 生产环境配置 -->
    <beans profile="production">
        <context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.properties" />
        
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
		    <!-- 基本属性 url、user、password -->  
		    <property name="url" value="${jdbc.url}" />  
		    <property name="username" value="${jdbc.username}" />  
		    <property name="password" value="${jdbc.password}" />  
		        
		    <!-- 配置初始化大小、最小、最大 -->  
		    <property name="initialSize" value="1" />  
		    <property name="minIdle" value="1" />   
		    <property name="maxActive" value="20" />  
		   
		    <!-- 配置获取连接等待超时的时间 -->  
		    <property name="maxWait" value="60000" />  
		   
		    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
		    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
		   
		    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
		    <property name="minEvictableIdleTimeMillis" value="300000" />  
		    
		    <property name="validationQuery" value="SELECT 'x'" />  
		    <property name="testWhileIdle" value="true" />  
		    <property name="testOnBorrow" value="false" />  
		    <property name="testOnReturn" value="false" />  
		   
		    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
		    <property name="poolPreparedStatements" value="true" />  
		    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
		   
		    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
		    <property name="filters" value="stat" />   
		</bean>  

    </beans>
    <!-- 测试环境配置 -->
    <beans profile="test">
        <context:property-placeholder ignore-resource-not-found="true"
            location="classpath*:/application.properties,
                      classpath*:/application.test.properties" />
    </beans>

</beans>